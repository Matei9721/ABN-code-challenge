# This Git hook scripts are useful for identifying simple issues before submission to code review.
# These hooks are being run on every commit to automatically point out issues in code such as missing semicolons,
# trailing whitespace, and debug statements.
# For more information/additional hooks: https://pre-commit.com/hooks.html
repos:
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.3.0
  hooks:
      - id: check-yaml # This hook checks yaml files  for parse-able syntax.
      - id: end-of-file-fixer # Ensures that a file is either empty, or ends with one newline.
        exclude: '^requirements.txt$'  # Exclude requirements.txt file
      - id: trailing-whitespace # This hook trims trailing whitespace
      - id: check-docstring-first # Checks a common error of defining a docstring after code
      - id: check-added-large-files  # Prevent 10M+ files from being committed
        args: ['--maxkb=5000']
      - id: requirements-txt-fixer # Sorts entries in requirements.txt
        exclude: '^requirements.txt$'  # Exclude requirements.txt file
      - id: debug-statements # Checks for debugger imports and py37+ `breakpoint()` calls
# Commitizen: Conventional commits checker
-   repo: https://github.com/commitizen-tools/commitizen
    rev: v2.35.0
    hooks:
    - id: commitizen
      stages: [commit-msg]
# Black: automated code formatter (making your code adjusted to PEP8 Standards)
#For more information: https://www.mattlayman.com/blog/2018/python-code-black/
-   repo: https://github.com/ambv/black
    rev: 22.8.0
    hooks:
    - id: black
      language_version: python3.10
      args: [-l 88]

- repo: https://github.com/charliermarsh/ruff-pre-commit
  # Ruff version.
  rev: 'v0.0.261'
  hooks:
    - id: ruff
